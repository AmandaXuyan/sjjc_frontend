{"remainingRequest":"/Users/amanda/sjjc_frontend/node_modules/babel-loader/lib/index.js!/Users/amanda/sjjc_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/amanda/sjjc_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/amanda/sjjc_frontend/src/views/components/cjs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/amanda/sjjc_frontend/src/views/components/cjs.vue","mtime":1622795035650},{"path":"/Users/amanda/sjjc_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amanda/sjjc_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/amanda/sjjc_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amanda/sjjc_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cjs.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\n  .tools {\n    display: inline-block;\n    height: 45px;\n    width: 45px;\n    vertical-align: middle;\n  }\n\n  .center-center {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-items: center;\n    justify-content: center;\n  }\n</style>\n\n<template>\n  <div style=\"position: absolute; height: 100%; width: 100%; z-index: 0;\">\n    <div id=\"cytoscape_id\" style=\"height: 100%; width: 100%; z-index: 1;\"></div>\n    <div id=\"cytoolbar_id\"\n         style=\"position: absolute; left: 5pt; top: 5pt; z-index: 2; background-color: rgba(249, 249, 249, 0.9);\">\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"放大\" type=\"ios-add-circle-outline\"\n                @click=\"magnifying()\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"缩小\" type=\"ios-remove-circle-outline\"\n                @click=\"contractible()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"撤销操作\" type=\"ios-arrow-back\" @click=\"cancel()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"合适大小\" type=\"ios-resize\" @click=\"resize()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"高亮邻居\" type=\"ios-color-wand-outline\"\n                @click=\"highlight()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"刷新布局\" type=\"ios-sync\"\n                @click=\"refresh({name: 'cola'})\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"网格布局\" type=\"ios-apps-outline\"\n                @click=\"refresh({name: 'grid'})\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"环形布局\" type=\"ios-globe-outline\"\n                @click=\"refresh({name: 'circle'})\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"全图导出\" type=\"ios-reverse-camera-outline\"\n                @click=\"exportPng()\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"文本导出\" type=\"ios-crop-outline\" @click=\"exportFile()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"搜索功能\" class=\"el-icon-search\"\n                @click=\"searchVisible=true\"/>\n        </div>\n      </div>\n\n      <div>\n        <!-- 搜索框   -->\n        <el-select\n          v-model=\"selectedValue\"\n          v-show=\"searchVisible\"\n          filterable\n          remote\n          placeholder=\"请输入要搜索的公司名\"\n          :remote-method=\"remoteMethod\"\n          :loading=\"loading\"\n        >\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.name\"\n            :label=\"item.name\"\n            :value=\"item.name\"\n          >\n          </el-option>\n        </el-select>\n        <el-button type=\"success\" icon=\"el-icon-check\"\n                   size=\"mini\"\n                   @click=\"findRelatedCompanies\"\n                   circle style=\" cursor: pointer;\"\n                   v-show=\"searchVisible\"\n        ></el-button>\n        <el-button type=\"error\" icon=\"el-icon-close\"\n                   size=\"mini\"\n                   circle style=\" cursor: pointer;\"\n                   @click=\"searchVisible=false\"\n                   v-show=\"searchVisible\"\n        ></el-button>\n      </div>\n    </div>\n\n    <div id=\"detail\" style=\"position: absolute; right: 40pt; top: 10pt;z-index: 3\" v-show=\"detailVisible\">\n      <el-popover\n              placement=\"bottom\"\n              width=\"350\"\n              trigger=\"click\">\n        <el-table :data=\"gridData\">\n          <el-table-column width=\"100\" property=\"date\" label=\"公司信息\"></el-table-column>\n          <el-table-column width=\"200\" property=\"name\" label=\"详情\"></el-table-column>\n        </el-table>\n        <el-button slot=\"reference\" @click=\"visible = !visible\">详细信息</el-button>\n      </el-popover>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import cytoscape from 'cytoscape';\n  import FileSaver from 'file-saver';\n  import cxtmenu from 'cytoscape-cxtmenu';\n  import cola from 'cytoscape-cola';\n  import avsdf from 'cytoscape-avsdf';\n  import coseBilkent from 'cytoscape-cose-bilkent';\n  import {getNameListAPI,findRelatedCompaniesAPI,findUpCompaniesAPI,findRiskChartAPI,findDetailAPI} from \"../../api/chart\";\n  //\n\n  export default {\n    name: \"CJS\",\n    beforeCreate() {\n      this.$cy && this.$cy.destroyed() && this.$cy.destroy();\n      delete this.$cy;\n    },\n    beforeDestroy() {\n      this.$cy && this.$cy.destroyed() && this.$cy.destroy();\n      delete this.$cy;\n    },\n    mounted() {\n      // Cxtmenu圆形菜单主要依赖组件\n      if (!cytoscape().cxtmenu) {\n        cytoscape.use(cxtmenu);\n        cytoscape.use(cola);\n        cytoscape.use(avsdf);\n        cytoscape.use(coseBilkent);\n        // cytoscape.use(popup);\n      }\n\n      this.$cy = cytoscape({\n        // initial viewport state:\n        zoom: 1, // 图表的初始缩放级别.可以设置options.minZoom和options.maxZoom设置缩放级别的限制.\n        pan: {x: 0, y: 0}, // 图表的初始平移位置.\n        // interaction options:\n        minZoom: 1e-50, // 图表缩放级别的最小界限.视口的缩放比例不能小于此缩放级别.\n        maxZoom: 1e50, // 图表缩放级别的最大界限.视口的缩放比例不能大于此缩放级别.\n        zoomingEnabled: true, // 是否通过用户事件和编程方式启用缩放图形.\n        userZoomingEnabled: true, // 是否允许用户事件(例如鼠标滚轮,捏合缩放)缩放图形.对此缩放的编程更改不受此选项的影响.\n        panningEnabled: true, // 是否通过用户事件和编程方式启用平移图形.\n        userPanningEnabled: true, // 是否允许用户事件(例如拖动图形背景)平移图形.平移的程序化更改不受此选项的影响.\n        boxSelectionEnabled: true, // 是否启用了框选择(即拖动框叠加,并将其释放为选择).如果启用,则用户必须点击以平移图表.\n        selectionType: 'single', // 一个字符串，指示用户输入的选择行为.对于'additive',用户进行的新选择将添加到当前所选元素的集合中.对于'single',用户做出的新选择成为当前所选元素的整个集合.\n        touchTapThreshold: 8, // 非负整数,分别表示用户在轻击手势期间可以在触摸设备和桌面设备上移动的最大允许距离.这使得用户更容易点击.\n                              // 这些值具有合理的默认值,因此建议不要更改这些选项,除非您有充分的理由这样做.大值几乎肯定会产生不良后果.\n        desktopTapThreshold: 4, // 非负整数,分别表示用户在轻击手势期间可以在触摸设备和桌面设备上移动的最大允许距离.这使得用户更容易点击.\n                                // 这些值具有合理的默认值,因此建议不要更改这些选项,除非您有充分的理由这样做.大值几乎肯定会产生不良后果.\n        autolock: false, // 默认情况下是否应锁定节点(根本不可拖动,如果true覆盖单个节点状态).\n        autoungrabify: false, // 默认情况下节点是否不允许被拾取(用户不可抓取,如果true覆盖单个节点状态).\n        autounselectify: false, // 默认情况下节点是否允许被选择(不可变选择状态,如果true覆盖单个元素状态).\n        // rendering options:\n        headless: false, // true:空运行,不显示不需要容器容纳.false:显示需要容器容纳.\n        styleEnabled: true, // 一个布尔值,指示是否应用样式.\n        hideEdgesOnViewport: true, // 渲染提示,设置为true在渲染窗口时,不渲染边.例如,移动某个顶点时或缩放时,边信息会被临时隐藏,移动结束后,边信息会被执行一次渲染.由于性能增强,此选项现在基本上没有实际意义.\n        hideLabelsOnViewport: true, // 渲染提示,当设置为true使渲染器在平移和缩放期间使用纹理而不是绘制元素时,使大图更具响应性.由于性能增强,此选项现在基本上没有实际意义.\n        textureOnViewport: true, // 渲染提示,当设置为true使渲染器在平移和缩放期间使用纹理而不是绘制元素时,使大图更具响应性.由于性能增强,此选项现在基本上没有实际意义.\n        motionBlur: true, // 渲染提示,设置为true使渲染器使用运动模糊效果使帧之间的过渡看起来更平滑.这可以增加大图的感知性能.由于性能增强,此选项现在基本上没有实际意义.\n        motionBlurOpacity: 0.2, // 当motionBlur:true,此值控制运动模糊帧的不透明度.值越高,运动模糊效果越明显.由于性能增强,此选项现在基本上没有实际意义.\n        wheelSensitivity: 0.3, // 缩放时更改滚轮灵敏度.这是一个乘法修饰符.因此,0到1之间的值会降低灵敏度(变焦较慢),而大于1的值会增加灵敏度(变焦更快).\n        pixelRatio: 'auto', // 使用手动设置值覆盖屏幕像素比率(1.0建议,如果已设置).这可以通过减少需要渲染的有效区域来提高高密度显示器的性能,\n                            // 尽管在最近的浏览器版本中这是不太必要的.如果要使用硬件的实际像素比,可以设置pixelRatio: 'auto'(默认).\n        // DOM容器,决定内容展示的位置,方式一(原生):document.getElementById('xx'),方式二(jQuery):$('#xx')\n        container: document.getElementById('cytoscape_id'),\n        // 一个指定布局选项的普通对象.\n        layout: {name: 'random'},\n      });\n      // Cxtmenu圆形菜单--开始\n      this.$cy.cxtmenu({\n        menuRadius: 80, // the radius of the circular menu in pixels\n        selector: 'node', // elements matching this Cytoscape.js selector will trigger cxtmenus\n        commands: () => {\n          return [\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">查看详细信息</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.findDetail(ele.data().name),\n              enabled: true, // whether the command is selectable\n            },\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">向上查询</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => // a function to execute when the command is selected\n                this.findUpCompany(ele.data().name), // `ele` holds the reference to the active element,\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '高亮邻居', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.lightOn([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '删除', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.delEle([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            }\n          ]\n        },\n        fillColor: 'rgba(0, 0, 0, 0.75)', // 指令默认颜色(the background colour of the menu)\n        activeFillColor: 'rgba(1, 105, 217, 0.75)', // 所选指令的颜色(the colour used to indicate the selected command)\n        activePadding: 10, // additional size in pixels for the active command\n        indicatorSize: 14, // the size in pixels of the pointer to the active command\n        separatorWidth: 4, //连续命令之间的空白间隔(以像素为单位)\n        spotlightPadding: 10, //元素和聚光灯之间的额外间距(以像素为单位)\n        minSpotlightRadius: 10, // the minimum radius in pixels of the spotlight\n        maxSpotlightRadius: 14, // the maximum radius in pixels of the spotlight\n        openMenuEvents: 'cxttapstart taphold', // space-separated cytoscape events that will open the menu; only `cxttapstart` and/or `taphold` work here\n        itemColor: 'white', // 各指令元素内字体颜色\n        itemTextShadowColor: 'red', // 各指令元素内字体阴影颜色\n        zIndex: 9999, // the z-index of the ui div\n        atMouse: true, // draw menu at mouse position\n      });\n      //Cxtmenu圆形菜单--结束\n\n      //边-Cxtmenu圆形菜单--开始\n      this.$cy.cxtmenu({\n        menuRadius: 40, // the radius of the circular menu in pixels\n        selector: 'edge', // elements matching this Cytoscape.js selector will trigger cxtmenus\n        commands: () => {\n          return [\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">暂定</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.something([ele.id()]),\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '删除', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.delEle([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            }\n          ]\n        },\n        fillColor: 'rgba(0, 0, 0, 0.75)', // 指令默认颜色(the background colour of the menu)\n        activeFillColor: 'rgba(1, 105, 217, 0.75)', // 所选指令的颜色(the colour used to indicate the selected command)\n        activePadding: 10, // additional size in pixels for the active command\n        indicatorSize: 14, // the size in pixels of the pointer to the active command\n        separatorWidth: 4, //连续命令之间的空白间隔(以像素为单位)\n        spotlightPadding: 10, //元素和聚光灯之间的额外间距(以像素为单位)\n        minSpotlightRadius: 10, // the minimum radius in pixels of the spotlight\n        maxSpotlightRadius: 14, // the maximum radius in pixels of the spotlight\n        openMenuEvents: 'cxttapstart taphold', // space-separated cytoscape events that will open the menu; only `cxttapstart` and/or `taphold` work here\n        itemColor: 'white', // 各指令元素内字体颜色\n        itemTextShadowColor: 'red', // 各指令元素内字体阴影颜色\n        zIndex: 9999, // the z-index of the ui div\n        atMouse: true, // draw menu at mouse position\n      });\n      //边-Cxtmenu圆形菜单--结束\n      // 节点的样式\n      this.$cy\n        .style()\n        .selector('.Company')\n        .css({'background-color': '#6FB1FC','label':'data(safety)' ,'content': 'data(orgName)', 'border-color': '#6FB1FC', 'border-width': \"5px\"})\n        // .style({'background-color': '#FF0000', 'border-color': '#FF0000', 'border-width': \"1px\",})\n        .selector('.DGJ')\n        .css({'background-color': '#F5A45D', 'content': 'data(name)', 'border-color': '#F5A45D', 'border-width': \"5px\"})\n        // // .style({'background-color': '#00FF00', 'border-color': '#00FF00', 'border-width': \"1px\",})\n        .selector('.one')\n        .style({'background-color': '#FFB6C1', 'border-color': '#FFB6C1', 'border-width': \"8px\",})\n        // .css({'background-color': '#b88cea', 'content': 'data(name)','border-color':'#b88cea','border-width':\"5px\"})\n        // .selector('.classes-D')\n        // .css({'background-color': '#83fd84', 'content': 'data(name)','border-color':'#83fd84','border-width':\"5px\"})\n        .selector('.HoldingRelation')\n        .css({\n          'target-arrow-color': '#999999', /*箭头颜色*/\n          'curve-style': 'bezier', /*线条样式曲线*/\n          'line-color': '#999999', /*线条颜色*/\n          'width': '1px', /*线条宽度*/\n          'font-size': '10px', /*标签字体大小*/\n          'color': '#000000', /*标签字体大小*/\n          'text-outline-color': 'white', /*文本轮廓颜色*/\n          'text-outline-width': '1px', /*文本轮廓宽度*/\n          'text-rotation': 'autorotate', /*标签方向*/\n        })\n        .selector('.relationB')\n        .css({\n          'line-style': 'dotted',\n          'target-arrow-color': '#999999', /*箭头颜色*/\n          'curve-style': 'bezier', /*线条样式曲线*/\n          'line-color': '#999999', /*线条颜色*/\n          'line-dash-offset': '1',\n          'width': '1px', /*线条宽度*/\n          'font-size': '10px', /*标签字体大小*/\n          'color': '#000000', /*标签字体大小*/\n          'text-outline-color': 'white', /*文本轮廓颜色*/\n          'text-outline-width': '1px', /*文本轮廓宽度*/\n          'text-rotation': 'autorotate', /*标签方向*/\n        })\n      ;\n      // 通用的样式\n      this.$cy.style()\n        /*未选择节点样式*/\n        .selector('node')\n        .style({'label': 'data(name)', 'font-size': '10pt', 'width': '8pt', 'height': '8pt'})\n        /*已选择节点样式*/\n        .selector('node:selected')\n        .style({'border-color': '#c84e40', 'border-width': \"1px\",})\n        /*未选择边样式*/\n        .selector('edge')\n        .style({\n          'label': 'data(name)',\n          'target-arrow-shape': 'triangle-backcurve', /*箭头样式*/\n          'target-arrow-size': '1px', /*箭头大小*/\n        })\n        /*已选择边样式*/\n        .selector('edge:selected')\n        .style({\n          'color': '#3165fc', /*标签字体大小*/\n          'target-arrow-color': '#61bffc', /*箭头颜色*/\n          'line-color': '#61bffc', /*线条颜色*/\n        })\n        /*高亮样式*/\n        .selector('.light-off')\n        .style({'opacity': '0.1',})\n      ;\n    },\n    data() {\n      return {\n        dialogVisible: false,\n        searchVisible: false,\n        detailVisible:false,\n        form: {\n          id: '',\n          name: '',\n          class: ''\n        },\n        //用于搜索模糊查询\n        options: [],\n        selectedValue: '',\n        loading: false,\n        activeNames: ['1'],//折叠面板\n\n        gridData: [{\n          date: '公司全称',\n          name: '',\n\n        }, {\n          date: '类型',\n          name: '',\n\n        }, {\n          date: '员工数',\n          name: '',\n\n        }, {\n          date: '风险值',\n          name: '',\n\n        },\n          {\n            date: '股票代码',\n            name: '',\n\n          }],\n        visible: false,\n        // deleted_array:this.$cy.collection(),\n      };\n    },\n    methods: {\n\n      closeDetail(){\n        this.detailVisible=false;\n      },\n\n      handleChange(val) {\n        // eslint-disable-next-line no-console\n        console.log(val);\n      },\n      /**\n       * 搜索后，刷新布局展示知识图谱\n       * TODO:测试findRelatedCompaniesAPI\n       **/\n      async findRelatedCompanies() {\n        // eslint-disable-next-line no-console\n        console.log(\"----selectedValue-----\")\n        // eslint-disable-next-line no-console\n        console.log(this.selectedValue)\n        if (this.selectedValue != \"\") {\n          this.searchVisible = false;\n          const res = await findRelatedCompaniesAPI(this.selectedValue);\n          // eslint-disable-next-line no-console\n          console.log(\"findRelatedCompaniesAPI:res----\")\n          // eslint-disable-next-line no-console\n          console.log(res)\n          if(res==false){\n            this.$message({\n              showClose: true,\n              message: '该公司没有下级股权信息哦，换个公司试试吧',\n              type: 'error'\n            });\n          }else{\n            this.$cy.startBatch();\n            this.$cy.batch(() => {\n              this.$cy.elements().map(function (ele) {\n                ele.remove();\n              });\n            });\n            this.$cy.endBatch();\n            this.$cy.add(res);\n            this.refresh({name: 'circle'});\n          }\n        } else {\n          this.$message({\n            showClose: true,\n            message: '请输入正确的公司名称',\n            type: 'error'\n          });\n        }\n        this.detailVisible=false;\n\n      },\n      /**\n       * 搜索模糊查询，接口已测\n       **/\n      async remoteMethod(query) {\n        // 如果用户输入内容了，就发请求拿数据，远程搜索模糊查询\n        if (query !== \"\") {\n          this.loading = true; // 开始拿数据喽\n          // 这里模拟发请求，res就当成发请求返回来的数据吧。\n          const res = await getNameListAPI(query);\n          if(res){\n            // eslint-disable-next-line no-console\n            console.log(res.result);\n            this.loading = false // 拿到数据\n            this.options = res.filter((item) => {\n              return item.name.toLowerCase().indexOf(query.toLowerCase()) > -1\n            })\n          } else {\n            this.options = [];\n          }\n          }\n        this.detailVisible=false;\n      },\n\n      //增加节点或边\n      addEles(eles) {\n        if (eles) {\n          this.$cy.startBatch();\n          this.$cy.batch(() => {\n            let elements = ((Array.isArray ? Array.isArray(eles) : null != eles && eles instanceof Array) ? eles : [eles]);\n            let filterElements = elements.filter(__ => !this.$cy.getElementById(__.data.id).length)\n            this.$cy.add(filterElements);\n          });\n          this.$cy.endBatch();\n        }\n      },\n\n      /**\n       * 边-圆形菜单\n       * 暂定不知道要干什么\n       * @param ele_id 某元素ID\n       **/\n      something() {\n\n      },\n\n      /**\n       * 圆形菜单-向上找寻最终控制人\n       * TODO:findUpCompaniesAPI接口没测\n       * @param eleName 某元素name\n       **/\n      async findUpCompany(eleName) {\n        if (eleName.indexOf(\" \") != -1){\n          eleName=eleName.split(\" \")[0]\n        }\n        // eslint-disable-next-line no-console\n        console.log(\"---selectEle---\")\n        // eslint-disable-next-line no-console\n        console.log(eleName)\n        const res = await findUpCompaniesAPI(eleName);\n        if(res==false){\n          this.$message({\n            showClose: true,\n            message: '该公司没有上级公司喽',\n            type: 'error'\n          });\n        }\n        else{\n          this.$cy.startBatch();\n          this.$cy.batch(() => {\n            //TODO:根据返回的数据决定要不要将原画布中元素删除\n            this.$cy.elements().map(function (ele) {\n              ele.remove();\n            });\n            this.$cy.add(res);\n            this.refresh({name: 'breadthfirst'})\n          });\n          this.$cy.endBatch();\n        }\n        this.detailVisible=false;\n      },\n\n      /**\n       * TODO：显示某公司详细信息!!!findDetailAPI\n       * @param ele 某元素name\n       **/\n      async findDetail(eleName) {\n        if (eleName.indexOf(\" \") != -1){\n          eleName=eleName.split(\" \")[0]\n        }\n        const res_detail = await findDetailAPI(eleName);\n        const res_chart= await findRiskChartAPI(eleName);\n        // eslint-disable-next-line no-console\n        console.log(\"---res_detail---\")\n        // eslint-disable-next-line no-console\n        console.log(res_detail)\n        // eslint-disable-next-line no-console\n        console.log(\"---res_chart---\")\n        // eslint-disable-next-line no-console\n        console.log(res_chart)\n\n        if(res_chart==false){\n          this.$message({\n            showClose: true,\n            message: '对不起，暂时还没有更详细的信息了',\n            type: 'error'\n          });\n        }else{\n\n          this.$cy.startBatch();\n          this.$cy.batch(() => {\n            this.$cy.elements().map(function (ele) {\n              ele.remove();\n            });\n          });\n          this.$cy.endBatch();\n          this.$cy.add(res_chart);\n          //TODO：详细信息的展示\n          this.refresh({name: 'breadthfirst'})\n          // this.refresh({name: 'cola'})\n          this.gridData[0].name=res_detail.name.split(\" \")[0]\n          this.gridData[1].name=res_detail.typeName\n          this.gridData[2].name=res_detail.staffNum\n          this.gridData[3].name=res_detail.safety\n          this.gridData[4].name=res_detail.stockId\n        }\n        // eslint-disable-next-line no-console\n        console.log(res_detail.stockId)\n        this.detailVisible=true;\n\n      },\n      modify() {\n        let element = this.$cy.getElementById(this.form.id);\n        element.data.name = this.form.name;\n        element.classes = this.form.class;\n      },\n      closepop() {\n        this.dialogVisible = false;\n      },\n\n      //TODO:撤销上一次删除内容，还要可以连续撤销\n      cancel() {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let element = that.deleted_array;\n          this.$cy.add(element);\n        });\n        this.$cy.endBatch();\n\n      },\n\n      /**\n       * 删除选择的内容(可能是顶点, 也可能是关系)\n       */\n      delEles() {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let selectedEles = this.$cy.elements(':selected');\n          that.deleted_array = this.find_relations(selectedEles.id());\n          // 未选择不进行操作\n          if (!selectedEles || 1 > selectedEles.length) {\n            return false;\n          }\n          selectedEles.remove();\n        });\n        this.$cy.endBatch();\n      },\n      /**\n       * 圆形菜单——删除\n       * @param ele 某元素ID\n       **/\n\n      delEle(ele) {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let elements = this.$cy.getElementById(ele);\n          that.deleted_array = this.find_relations(ele);\n          elements.remove();\n        });\n        this.$cy.endBatch();\n      },\n\n      /**\n       * 根据节点找关系\n       * @param ele 某元素ID\n       **/\n      find_relations(ele) {\n        var collection = this.$cy.collection();\n        var element = this.$cy.getElementById(ele);\n        collection = collection.add(element);\n        if (element.group() == 'nodes') {\n          var id = element.id();\n          this.$cy.elements().map(function (ele) {\n            if (ele.data()[\"source\"] == id || ele.data()[\"target\"] == id) {\n              collection.merge(ele);\n            }\n          });\n        }\n        return collection;\n      },\n\n      /***************************工具栏************************/\n      /**\n       * 导出全局图片.\n       */\n      exportPng() {\n        let blob = this.$cy.png({output: 'blob', bg: 'white', full: true, scale: 4, quality: 1});\n        let [aLink, evt] = [document.createElement('a'), document.createEvent(\"HTMLEvents\")];\n        evt.initEvent(\"click\", true, true);\n        [aLink.download, aLink.href] = [`${new Date().getTime()}.png`, URL.createObjectURL(blob)];\n        aLink.dispatchEvent(evt);\n        aLink.click();\n      },\n      /**\n       * 缩放大小.\n       * @param zoom 增减幅度.\n       */\n      zoom(zoom) {\n        /** 获取已选择内容 */\n        let selectedEles = this.$cy.elements('node:selected');\n        /** 获取已选择内容中得第一个, 没有选择为null */\n        let selectedEle = selectedEles && selectedEles.length ? selectedEles[0] : null;\n        /** 获取画布偏移位置 */\n        let pan = this.$cy.pan();\n        /** 计算原点坐标 */\n        let [x, y] = selectedEle ? [selectedEle.position('x'), selectedEle.position('y')] : [pan.x, pan.y];\n        let level = this.$cy.zoom() + zoom;\n        (level > this.$cy.maxZoom) && (level = this.$cy.maxZoom);\n        (level < this.$cy.minZoom) && (level = this.$cy.minZoom);\n        this.$cy.zoom({level: level, renderedPosition: {x: x, y: y}});\n      },\n      /** 放大 */\n      magnifying() {\n        this.zoom(0.3);\n      },\n      /** 缩小 */\n      contractible() {\n        this.zoom(-0.3);\n      },\n      /** 合适大小 */\n      resize() {\n        this.$cy.fit();\n      },\n      /**\n       * 高亮.\n       * @param ele 某元素ID\n       */\n      lightOn(ele) {\n        this.$cy.startBatch();\n        this.$cy.batch(() => {\n          this.$cy.elements().addClass(\"light-off\"); //*添加样式*/\n          let elements = ((Array.isArray ? Array.isArray(ele) : null != ele && ele instanceof Array) ? ele : [ele]);\n          elements.forEach(__ => {\n            this.$cy.getElementById(__).removeClass(\"light-off\");\n            this.$cy.getElementById(__).neighborhood().removeClass(\"light-off\");\n          });\n        });\n        this.$cy.once('click', () => this.lightOff());\n        this.$cy.endBatch();\n      },\n      /**\n       * 取消高亮\n       */\n      lightOff() {\n        this.$cy.startBatch();\n        this.$cy.batch(() => this.$cy.elements().removeClass(\"light-off\") /*移除样式*/);\n        this.$cy.endBatch();\n      },\n      /** 高亮邻居 */\n      highlight() {\n        /** 获取已选择内容 */\n        let selectedEles = this.$cy.elements('node:selected');\n        /** 获取已选择内容中得第一个, 没有选择为null */\n        let selectedEle = selectedEles && selectedEles.length ? selectedEles[0] : null;\n        (selectedEle) && (this.lightOn(selectedEle.id()));\n      },\n      /**\n       * 刷新布局.\n       * name取值范围:\n       * ['grid', 'circle', 'cola', 'avsdf', 'cose-bilkent', ]\n       * @param {name = 'cola......', randomize = true | false, animate = true | false}\n       */\n      refresh({name = 'cola', randomize = false, animate = true} = {}) {\n        this.$cy.layout({name: name, randomize: randomize, animate: animate,}).run();\n      },\n      exportFile() {\n        const data = JSON.stringify(this.$cy.json(), null, \"\\t\");\n        const blob = new Blob([data], {type: 'json'})\n        FileSaver.saveAs(blob, 'hahaha.json')\n      }\n      /***************************工具栏************************/\n    },\n  }\n</script>\n<style type=\"text/css\">\n  .detail{\n    position: relative;\n    right: 10%;\n\n  }\n</style>\n\n"],"sourceRoot":"src/views/components"}]}