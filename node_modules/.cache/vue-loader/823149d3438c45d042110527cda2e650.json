{"remainingRequest":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/src/views/components/cjs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/src/views/components/cjs.vue","mtime":1622711838647},{"path":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amanda/Downloads/nju大三下/软工三/大作业项目/soft/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cjs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"cjs.vue","sourceRoot":"src/views/components","sourcesContent":["<style scoped>\n  .tools {\n    display: inline-block;\n    height: 45px;\n    width: 45px;\n    vertical-align: middle;\n  }\n\n  .center-center {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-items: center;\n    justify-content: center;\n  }\n</style>\n\n<template>\n  <div style=\"position: absolute; height: 100%; width: 100%; z-index: 0;\">\n    <div id=\"cytoscape_id\" style=\"height: 100%; width: 100%; z-index: 1;\"></div>\n    <div id=\"cytoolbar_id\"\n         style=\"position: absolute; left: 5pt; top: 5pt; z-index: 2; background-color: rgba(249, 249, 249, 0.9);\">\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"放大\" type=\"ios-add-circle-outline\"\n                @click=\"magnifying()\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"缩小\" type=\"ios-remove-circle-outline\"\n                @click=\"contractible()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"撤销操作\" type=\"ios-arrow-back\" @click=\"cancel()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"合适大小\" type=\"ios-resize\" @click=\"resize()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"高亮邻居\" type=\"ios-color-wand-outline\"\n                @click=\"highlight()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"刷新布局\" type=\"ios-sync\"\n                @click=\"refresh({name: 'cola'})\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"网格布局\" type=\"ios-apps-outline\"\n                @click=\"refresh({name: 'grid'})\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"环形布局\" type=\"ios-globe-outline\"\n                @click=\"refresh({name: 'circle'})\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"全图导出\" type=\"ios-reverse-camera-outline\"\n                @click=\"exportPng()\"/>\n        </div>\n      </div>\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"文本导出\" type=\"ios-crop-outline\" @click=\"exportFile()\"/>\n        </div>\n      </div>\n\n      <div class=\"tools\">\n        <div class=\"center-center\">\n          <Icon style=\"font-size: 32px; cursor: pointer;\" title=\"搜索功能\" class=\"el-icon-search\"\n                @click=\"searchVisible=true\"/>\n        </div>\n      </div>\n\n      <div>\n        <!-- 搜索框   -->\n        <el-select\n          v-model=\"selectedValue\"\n          v-show=\"searchVisible\"\n          filterable\n          remote\n          placeholder=\"请输入要搜索的公司名\"\n          :remote-method=\"remoteMethod\"\n          :loading=\"loading\"\n        >\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.name\"\n            :label=\"item.name\"\n            :value=\"item.name\"\n          >\n          </el-option>\n        </el-select>\n        <el-button type=\"success\" icon=\"el-icon-check\"\n                   size=\"mini\"\n                   @click=\"findRelatedCompanies\"\n                   circle style=\" cursor: pointer;\"\n                   v-show=\"searchVisible\"\n        ></el-button>\n        <el-button type=\"error\" icon=\"el-icon-close\"\n                   size=\"mini\"\n                   circle style=\" cursor: pointer;\"\n                   @click=\"searchVisible=false\"\n                   v-show=\"searchVisible\"\n        ></el-button>\n      </div>\n    </div>\n\n    <div id=\"detail\" style=\"position: absolute; right: 35pt; top: 20pt;z-index: 3\" v-show=\"detailVisible\">\n      <el-card shadow=\"always\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>详细信息</span>\n          <Icon style=\"float: right; padding: 3px 0\" title=\"关闭\" class=\"el-icon-close\" @click=\"closeDetail\"/>\n        </div>\n        <el-collapse v-model=\"activeNames\" @change=\"handleChange\" >\n          <el-collapse-item name=\"1\">\n            <template slot=\"title\">\n              一致性 Consistency<i class=\"header-icon el-icon-info\"></i>\n            </template>\n            <div>与现实生活一致：与现实生活的流程保持一致；</div>\n            <div>在界面中一致：所有的元素和结构需保持一致。</div>\n          </el-collapse-item>\n          <el-collapse-item title=\"反馈 Feedback\" name=\"2\">\n            <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n            <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div>\n          </el-collapse-item>\n          <el-collapse-item title=\"效率 Efficiency\" name=\"3\">\n            <div>简化流程：设计简洁直观的操作流程；</div>\n            <div>清晰明确：语言表达清晰且表意明确，让用户快速理解进而作出决策；</div>\n            <div>帮助用户识别：界面简单直白，让用户快速识别而非回忆，减少用户记忆负担。</div>\n          </el-collapse-item>\n          <el-collapse-item title=\"可控 Controllability\" name=\"4\">\n            <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n            <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n          </el-collapse-item>\n        </el-collapse>\n      </el-card>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import cytoscape from 'cytoscape';\n  import FileSaver from 'file-saver';\n  import cxtmenu from 'cytoscape-cxtmenu';\n  import cola from 'cytoscape-cola';\n  import avsdf from 'cytoscape-avsdf';\n  import coseBilkent from 'cytoscape-cose-bilkent';\n  import {getNameListAPI,findRelatedCompaniesAPI,findUpCompaniesAPI,findRiskChartAPI,findDetailAPI} from \"../../api/chart\";\n  //\n\n  export default {\n    name: \"CJS\",\n    beforeCreate() {\n      this.$cy && this.$cy.destroyed() && this.$cy.destroy();\n      delete this.$cy;\n    },\n    beforeDestroy() {\n      this.$cy && this.$cy.destroyed() && this.$cy.destroy();\n      delete this.$cy;\n    },\n    mounted() {\n      // Cxtmenu圆形菜单主要依赖组件\n      if (!cytoscape().cxtmenu) {\n        cytoscape.use(cxtmenu);\n        cytoscape.use(cola);\n        cytoscape.use(avsdf);\n        cytoscape.use(coseBilkent);\n        // cytoscape.use(popup);\n      }\n\n      this.$cy = cytoscape({\n        // initial viewport state:\n        zoom: 1, // 图表的初始缩放级别.可以设置options.minZoom和options.maxZoom设置缩放级别的限制.\n        pan: {x: 0, y: 0}, // 图表的初始平移位置.\n        // interaction options:\n        minZoom: 1e-50, // 图表缩放级别的最小界限.视口的缩放比例不能小于此缩放级别.\n        maxZoom: 1e50, // 图表缩放级别的最大界限.视口的缩放比例不能大于此缩放级别.\n        zoomingEnabled: true, // 是否通过用户事件和编程方式启用缩放图形.\n        userZoomingEnabled: true, // 是否允许用户事件(例如鼠标滚轮,捏合缩放)缩放图形.对此缩放的编程更改不受此选项的影响.\n        panningEnabled: true, // 是否通过用户事件和编程方式启用平移图形.\n        userPanningEnabled: true, // 是否允许用户事件(例如拖动图形背景)平移图形.平移的程序化更改不受此选项的影响.\n        boxSelectionEnabled: true, // 是否启用了框选择(即拖动框叠加,并将其释放为选择).如果启用,则用户必须点击以平移图表.\n        selectionType: 'single', // 一个字符串，指示用户输入的选择行为.对于'additive',用户进行的新选择将添加到当前所选元素的集合中.对于'single',用户做出的新选择成为当前所选元素的整个集合.\n        touchTapThreshold: 8, // 非负整数,分别表示用户在轻击手势期间可以在触摸设备和桌面设备上移动的最大允许距离.这使得用户更容易点击.\n                              // 这些值具有合理的默认值,因此建议不要更改这些选项,除非您有充分的理由这样做.大值几乎肯定会产生不良后果.\n        desktopTapThreshold: 4, // 非负整数,分别表示用户在轻击手势期间可以在触摸设备和桌面设备上移动的最大允许距离.这使得用户更容易点击.\n                                // 这些值具有合理的默认值,因此建议不要更改这些选项,除非您有充分的理由这样做.大值几乎肯定会产生不良后果.\n        autolock: false, // 默认情况下是否应锁定节点(根本不可拖动,如果true覆盖单个节点状态).\n        autoungrabify: false, // 默认情况下节点是否不允许被拾取(用户不可抓取,如果true覆盖单个节点状态).\n        autounselectify: false, // 默认情况下节点是否允许被选择(不可变选择状态,如果true覆盖单个元素状态).\n        // rendering options:\n        headless: false, // true:空运行,不显示不需要容器容纳.false:显示需要容器容纳.\n        styleEnabled: true, // 一个布尔值,指示是否应用样式.\n        hideEdgesOnViewport: true, // 渲染提示,设置为true在渲染窗口时,不渲染边.例如,移动某个顶点时或缩放时,边信息会被临时隐藏,移动结束后,边信息会被执行一次渲染.由于性能增强,此选项现在基本上没有实际意义.\n        hideLabelsOnViewport: true, // 渲染提示,当设置为true使渲染器在平移和缩放期间使用纹理而不是绘制元素时,使大图更具响应性.由于性能增强,此选项现在基本上没有实际意义.\n        textureOnViewport: true, // 渲染提示,当设置为true使渲染器在平移和缩放期间使用纹理而不是绘制元素时,使大图更具响应性.由于性能增强,此选项现在基本上没有实际意义.\n        motionBlur: true, // 渲染提示,设置为true使渲染器使用运动模糊效果使帧之间的过渡看起来更平滑.这可以增加大图的感知性能.由于性能增强,此选项现在基本上没有实际意义.\n        motionBlurOpacity: 0.2, // 当motionBlur:true,此值控制运动模糊帧的不透明度.值越高,运动模糊效果越明显.由于性能增强,此选项现在基本上没有实际意义.\n        wheelSensitivity: 0.3, // 缩放时更改滚轮灵敏度.这是一个乘法修饰符.因此,0到1之间的值会降低灵敏度(变焦较慢),而大于1的值会增加灵敏度(变焦更快).\n        pixelRatio: 'auto', // 使用手动设置值覆盖屏幕像素比率(1.0建议,如果已设置).这可以通过减少需要渲染的有效区域来提高高密度显示器的性能,\n                            // 尽管在最近的浏览器版本中这是不太必要的.如果要使用硬件的实际像素比,可以设置pixelRatio: 'auto'(默认).\n        // DOM容器,决定内容展示的位置,方式一(原生):document.getElementById('xx'),方式二(jQuery):$('#xx')\n        container: document.getElementById('cytoscape_id'),\n        // 一个指定布局选项的普通对象.\n        layout: {name: 'random'},\n      });\n      // Cxtmenu圆形菜单--开始\n      this.$cy.cxtmenu({\n        menuRadius: 80, // the radius of the circular menu in pixels\n        selector: 'node', // elements matching this Cytoscape.js selector will trigger cxtmenus\n        commands: () => {\n          return [\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">查看详细信息</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.findDetail(ele.data().name),\n              enabled: true, // whether the command is selectable\n            },\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">向上查询</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => // a function to execute when the command is selected\n                this.findUpCompany(ele.data().name), // `ele` holds the reference to the active element,\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '高亮邻居', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.lightOn([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '删除', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.delEle([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            }\n          ]\n        },\n        fillColor: 'rgba(0, 0, 0, 0.75)', // 指令默认颜色(the background colour of the menu)\n        activeFillColor: 'rgba(1, 105, 217, 0.75)', // 所选指令的颜色(the colour used to indicate the selected command)\n        activePadding: 10, // additional size in pixels for the active command\n        indicatorSize: 14, // the size in pixels of the pointer to the active command\n        separatorWidth: 4, //连续命令之间的空白间隔(以像素为单位)\n        spotlightPadding: 10, //元素和聚光灯之间的额外间距(以像素为单位)\n        minSpotlightRadius: 10, // the minimum radius in pixels of the spotlight\n        maxSpotlightRadius: 14, // the maximum radius in pixels of the spotlight\n        openMenuEvents: 'cxttapstart taphold', // space-separated cytoscape events that will open the menu; only `cxttapstart` and/or `taphold` work here\n        itemColor: 'white', // 各指令元素内字体颜色\n        itemTextShadowColor: 'red', // 各指令元素内字体阴影颜色\n        zIndex: 9999, // the z-index of the ui div\n        atMouse: true, // draw menu at mouse position\n      });\n      //Cxtmenu圆形菜单--结束\n\n      //边-Cxtmenu圆形菜单--开始\n      this.$cy.cxtmenu({\n        menuRadius: 40, // the radius of the circular menu in pixels\n        selector: 'edge', // elements matching this Cytoscape.js selector will trigger cxtmenus\n        commands: () => {\n          return [\n            {\n              fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '<span class=\"fa fa-flash fa-2x\">暂定</span>', // html/text content to be displayed in the menu\n              contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.something([ele.id()]),\n              enabled: true, // whether the command is selectable\n            },\n            {\n              // fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n              content: '删除', // html/text content to be displayed in the menu\n              // contentStyle: {}, // css key:value pairs to set the command's css in js if you want\n              select: (ele) => this.delEle([ele.id()]),  // a function to execute when the command is selected\n              enabled: true, // whether the command is selectable\n            }\n          ]\n        },\n        fillColor: 'rgba(0, 0, 0, 0.75)', // 指令默认颜色(the background colour of the menu)\n        activeFillColor: 'rgba(1, 105, 217, 0.75)', // 所选指令的颜色(the colour used to indicate the selected command)\n        activePadding: 10, // additional size in pixels for the active command\n        indicatorSize: 14, // the size in pixels of the pointer to the active command\n        separatorWidth: 4, //连续命令之间的空白间隔(以像素为单位)\n        spotlightPadding: 10, //元素和聚光灯之间的额外间距(以像素为单位)\n        minSpotlightRadius: 10, // the minimum radius in pixels of the spotlight\n        maxSpotlightRadius: 14, // the maximum radius in pixels of the spotlight\n        openMenuEvents: 'cxttapstart taphold', // space-separated cytoscape events that will open the menu; only `cxttapstart` and/or `taphold` work here\n        itemColor: 'white', // 各指令元素内字体颜色\n        itemTextShadowColor: 'red', // 各指令元素内字体阴影颜色\n        zIndex: 9999, // the z-index of the ui div\n        atMouse: true, // draw menu at mouse position\n      });\n      //边-Cxtmenu圆形菜单--结束\n      // 节点的样式\n      this.$cy\n        .style()\n        .selector('.classes-A')\n        .css({'background-color': '#6FB1FC', 'content': 'data(name)', 'border-color': '#6FB1FC', 'border-width': \"5px\"})\n        // .style({'background-color': '#FF0000', 'border-color': '#FF0000', 'border-width': \"1px\",})\n        .selector('.classes-B')\n        .css({'background-color': '#F5A45D', 'content': 'data(name)', 'border-color': '#F5A45D', 'border-width': \"5px\"})\n        // // .style({'background-color': '#00FF00', 'border-color': '#00FF00', 'border-width': \"1px\",})\n        // .selector('.classes-C')\n        // // .style({'background-color': '#0000FF', 'border-color': '#0000FF', 'border-width': \"1px\",})\n        // .css({'background-color': '#b88cea', 'content': 'data(name)','border-color':'#b88cea','border-width':\"5px\"})\n        // .selector('.classes-D')\n        // .css({'background-color': '#83fd84', 'content': 'data(name)','border-color':'#83fd84','border-width':\"5px\"})\n        .selector('.relationA')\n        .css({\n          'target-arrow-color': '#999999', /*箭头颜色*/\n          'curve-style': 'bezier', /*线条样式曲线*/\n          'line-color': '#999999', /*线条颜色*/\n          'width': '1px', /*线条宽度*/\n          'font-size': '10px', /*标签字体大小*/\n          'color': '#000000', /*标签字体大小*/\n          'text-outline-color': 'white', /*文本轮廓颜色*/\n          'text-outline-width': '1px', /*文本轮廓宽度*/\n          'text-rotation': 'autorotate', /*标签方向*/\n        })\n        .selector('.relationB')\n        .css({\n          'line-style': 'dotted',\n          'target-arrow-color': '#999999', /*箭头颜色*/\n          'curve-style': 'bezier', /*线条样式曲线*/\n          'line-color': '#999999', /*线条颜色*/\n          'line-dash-offset': '1',\n          'width': '1px', /*线条宽度*/\n          'font-size': '10px', /*标签字体大小*/\n          'color': '#000000', /*标签字体大小*/\n          'text-outline-color': 'white', /*文本轮廓颜色*/\n          'text-outline-width': '1px', /*文本轮廓宽度*/\n          'text-rotation': 'autorotate', /*标签方向*/\n        })\n      ;\n      // 通用的样式\n      this.$cy.style()\n        /*未选择节点样式*/\n        .selector('node')\n        .style({'label': 'data(name)', 'font-size': '10pt', 'width': '8pt', 'height': '8pt'})\n        /*已选择节点样式*/\n        .selector('node:selected')\n        .style({'border-color': '#c84e40', 'border-width': \"1px\",})\n        /*未选择边样式*/\n        .selector('edge')\n        .style({\n          'label': 'data(name)',\n          'target-arrow-shape': 'triangle-backcurve', /*箭头样式*/\n          'target-arrow-size': '1px', /*箭头大小*/\n        })\n        /*已选择边样式*/\n        .selector('edge:selected')\n        .style({\n          'color': '#3165fc', /*标签字体大小*/\n          'target-arrow-color': '#61bffc', /*箭头颜色*/\n          'line-color': '#61bffc', /*线条颜色*/\n        })\n        /*高亮样式*/\n        .selector('.light-off')\n        .style({'opacity': '0.1',})\n      ;\n    },\n    data() {\n      return {\n        dialogVisible: false,\n        searchVisible: false,\n        detailVisible:false,\n        form: {\n          id: '',\n          name: '',\n          class: ''\n        },\n        //用于搜索模糊查询\n        options: [],\n        selectedValue: '',\n        loading: false,\n        activeNames: ['1'],//折叠面板\n\n        // deleted_array:this.$cy.collection(),\n      };\n    },\n    methods: {\n\n      closeDetail(){\n        this.detailVisible=false;\n      },\n\n      handleChange(val) {\n        console.log(val);\n      },\n      /**\n       * 搜索后，刷新布局展示知识图谱\n       * TODO:测试findRelatedCompaniesAPI\n       **/\n      findRelatedCompanies() {\n        console.log(\"----selectedValue-----\")\n        console.log(this.selectedValue)\n        if (this.selectedValue != \"\") {\n          this.searchVisible = false;\n          const res = findRelatedCompaniesAPI(this.selectedValue);\n          this.$cy.startBatch();\n          this.$cy.batch(() => {\n            this.$cy.elements().map(function (ele) {\n              ele.remove();\n            });\n            this.$cy.addEles(res);\n          });\n          this.$cy.endBatch();\n        } else {\n          this.$message({\n\n            showClose: true,\n            message: '请输入正确的公司名称',\n            type: 'error'\n          });\n        }\n\n      },\n      /**\n       * TODO:搜索模糊查询，接口没测\n       **/\n      remoteMethod(query) {\n        // 如果用户输入内容了，就发请求拿数据，远程搜索模糊查询\n        if (query !== \"\") {\n          this.loading = true; // 开始拿数据喽\n          // 这里模拟发请求，res就当成发请求返回来的数据吧。\n          const res = getNameListAPI(query);\n          console.log(res)\n          // let res = [\n          //   {\n          //     id: 1,\n          //     name: \"孙悟空\",\n          //   },\n          //   {\n          //     id: 2,\n          //     name: \"孙尚香\",\n          //   },\n          //   {\n          //     id: 3,\n          //     name: \"沙和尚\",\n          //   },\n          //   {\n          //     id: 4,\n          //     name: \"沙师弟\",\n          //   },\n          // ];\n          this.loading = false // 拿到数据\n          this.options = res.filter((item) => {\n            return item.name.toLowerCase().indexOf(query.toLowerCase()) > -1\n          })\n        } else {\n          this.options = [];\n        }\n      },\n\n      //增加节点或边\n      addEles(eles) {\n        if (eles) {\n          this.$cy.startBatch();\n          this.$cy.batch(() => {\n            let elements = ((Array.isArray ? Array.isArray(eles) : null != eles && eles instanceof Array) ? eles : [eles]);\n            let filterElements = elements.filter(__ => !this.$cy.getElementById(__.data.id).length)\n            this.$cy.add(filterElements);\n          });\n          this.$cy.endBatch();\n        }\n      },\n\n      /**\n       * 边-圆形菜单\n       * 暂定不知道要干什么\n       * @param ele_id 某元素ID\n       **/\n      something() {\n\n      },\n\n      /**\n       * 圆形菜单-向上找寻最终控制人\n       * TODO:findUpCompaniesAPI接口没测\n       * @param eleName 某元素name\n       **/\n      findUpCompany(eleName) {\n        console.log(\"---selectEle---\")\n        console.log(eleName)\n        const res = findUpCompaniesAPI(eleName);\n        this.$cy.startBatch();\n        this.$cy.batch(() => {\n          //TODO:根据返回的数据决定要不要将原画布中元素删除\n          this.$cy.elements().map(function (ele) {\n            ele.remove();\n          });\n          this.$cy.addEles(res);\n        });\n        this.$cy.endBatch();\n      },\n\n      /**\n       * TODO：显示某公司详细信息!!!findDetailAPI\n       * @param ele 某元素name\n       **/\n      findDetail(eleName) {\n        const res_detail = findDetailAPI(eleName);\n        const res_chart=findRiskChartAPI(eleName);\n        console.log(\"---selectEle---\")\n        console.log(eleName)\n        this.$cy.startBatch();\n        this.$cy.batch(() => {\n          this.$cy.elements().map(function (ele) {\n            ele.remove();\n          });\n          this.$cy.addEles(res_chart);\n        });\n        this.$cy.endBatch();\n        //TODO：详细信息的展示\n        this.refresh({name: 'breadthfirst'})\n        // this.refresh({name: 'cola'})\n        this.detailVisible=true;\n        console.log(res_detail)\n\n\n      },\n      modify() {\n        let element = this.$cy.getElementById(this.form.id);\n        element.data.name = this.form.name;\n        element.classes = this.form.class;\n      },\n      closepop() {\n        this.dialogVisible = false;\n      },\n\n      //TODO:撤销上一次删除内容，还要可以连续撤销\n      cancel() {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let element = that.deleted_array;\n          this.$cy.add(element);\n        });\n        this.$cy.endBatch();\n\n      },\n\n      /**\n       * 删除选择的内容(可能是顶点, 也可能是关系)\n       */\n      delEles() {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let selectedEles = this.$cy.elements(':selected');\n          that.deleted_array = this.find_relations(selectedEles.id());\n          // 未选择不进行操作\n          if (!selectedEles || 1 > selectedEles.length) {\n            return false;\n          }\n          selectedEles.remove();\n        });\n        this.$cy.endBatch();\n      },\n      /**\n       * 圆形菜单——删除\n       * @param ele 某元素ID\n       **/\n\n      delEle(ele) {\n        this.$cy.startBatch();\n        const that = this;\n        this.$cy.batch(() => {\n          let elements = this.$cy.getElementById(ele);\n          that.deleted_array = this.find_relations(ele);\n          elements.remove();\n        });\n        this.$cy.endBatch();\n      },\n\n      /**\n       * 根据节点找关系\n       * @param ele 某元素ID\n       **/\n      find_relations(ele) {\n        var collection = this.$cy.collection();\n        var element = this.$cy.getElementById(ele);\n        collection = collection.add(element);\n        if (element.group() == 'nodes') {\n          var id = element.id();\n          this.$cy.elements().map(function (ele) {\n            if (ele.data()[\"source\"] == id || ele.data()[\"target\"] == id) {\n              collection.merge(ele);\n            }\n          });\n        }\n        return collection;\n      },\n\n      /***************************工具栏************************/\n      /**\n       * 导出全局图片.\n       */\n      exportPng() {\n        let blob = this.$cy.png({output: 'blob', bg: 'white', full: true, scale: 4, quality: 1});\n        let [aLink, evt] = [document.createElement('a'), document.createEvent(\"HTMLEvents\")];\n        evt.initEvent(\"click\", true, true);\n        [aLink.download, aLink.href] = [`${new Date().getTime()}.png`, URL.createObjectURL(blob)];\n        aLink.dispatchEvent(evt);\n        aLink.click();\n      },\n      /**\n       * 缩放大小.\n       * @param zoom 增减幅度.\n       */\n      zoom(zoom) {\n        /** 获取已选择内容 */\n        let selectedEles = this.$cy.elements('node:selected');\n        /** 获取已选择内容中得第一个, 没有选择为null */\n        let selectedEle = selectedEles && selectedEles.length ? selectedEles[0] : null;\n        /** 获取画布偏移位置 */\n        let pan = this.$cy.pan();\n        /** 计算原点坐标 */\n        let [x, y] = selectedEle ? [selectedEle.position('x'), selectedEle.position('y')] : [pan.x, pan.y];\n        let level = this.$cy.zoom() + zoom;\n        (level > this.$cy.maxZoom) && (level = this.$cy.maxZoom);\n        (level < this.$cy.minZoom) && (level = this.$cy.minZoom);\n        this.$cy.zoom({level: level, renderedPosition: {x: x, y: y}});\n      },\n      /** 放大 */\n      magnifying() {\n        this.zoom(0.3);\n      },\n      /** 缩小 */\n      contractible() {\n        this.zoom(-0.3);\n      },\n      /** 合适大小 */\n      resize() {\n        this.$cy.fit();\n      },\n      /**\n       * 高亮.\n       * @param ele 某元素ID\n       */\n      lightOn(ele) {\n        this.$cy.startBatch();\n        this.$cy.batch(() => {\n          this.$cy.elements().addClass(\"light-off\"); //*添加样式*/\n          let elements = ((Array.isArray ? Array.isArray(ele) : null != ele && ele instanceof Array) ? ele : [ele]);\n          elements.forEach(__ => {\n            this.$cy.getElementById(__).removeClass(\"light-off\");\n            this.$cy.getElementById(__).neighborhood().removeClass(\"light-off\");\n          });\n        });\n        this.$cy.once('click', () => this.lightOff());\n        this.$cy.endBatch();\n      },\n      /**\n       * 取消高亮\n       */\n      lightOff() {\n        this.$cy.startBatch();\n        this.$cy.batch(() => this.$cy.elements().removeClass(\"light-off\") /*移除样式*/);\n        this.$cy.endBatch();\n      },\n      /** 高亮邻居 */\n      highlight() {\n        /** 获取已选择内容 */\n        let selectedEles = this.$cy.elements('node:selected');\n        /** 获取已选择内容中得第一个, 没有选择为null */\n        let selectedEle = selectedEles && selectedEles.length ? selectedEles[0] : null;\n        (selectedEle) && (this.lightOn(selectedEle.id()));\n      },\n      /**\n       * 刷新布局.\n       * name取值范围:\n       * ['grid', 'circle', 'cola', 'avsdf', 'cose-bilkent', ]\n       * @param {name = 'cola......', randomize = true | false, animate = true | false}\n       */\n      refresh({name = 'cola', randomize = false, animate = true} = {}) {\n        this.$cy.layout({name: name, randomize: randomize, animate: animate,}).run();\n      },\n      exportFile() {\n        const data = JSON.stringify(this.$cy.json(), null, \"\\t\");\n        const blob = new Blob([data], {type: 'json'})\n        FileSaver.saveAs(blob, 'hahaha.json')\n      }\n      /***************************工具栏************************/\n    },\n  }\n</script>\n<style type=\"text/css\">\n  .detail{\n    position: relative;\n    right: 10%;\n\n  }\n</style>\n\n"]}]}